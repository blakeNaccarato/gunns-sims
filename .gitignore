# * -------------------------------------------------------------------------------- * #
# * PROJECT-SPECIFIC

# Be sure to override .gitignore in the template questions before putting anything here.
# My modifications
*.bkp
*.dtmp
*.cpp
*.hh
*.xml.bak
_init_log.csv

#! From gunns/sims/.gitignore

# Trick-generated files and folders found in sim directories
trick
trick.zip
.trick
makefile

#! From gunns/.gitignore

### Common (for all trick projects) ###

#TEST

# build products
*.[oa]
*.gcno
*.gcda
*.gch
*.pyc
object_*
S_library_list_ext
.S_library_list_ext
build/

# editor temporary files
*.swp
*~

# ctags tags files
tags

# Trick-generated files and folders
# found in model and sim directories
xml
io_src
swig
# found only in sim directories
.auto_checksums
CP_out
log_*.header
log_*.trk
Makefile_deps
Makefile_temp_depends
Makefile_swig
Makefile_sim
MAKE_out
send_hs
swig_src
S_default.dat
S_define_expnd*
S_document.xml
S_*.exe
S_job_execution
S_library_list
S_sie.resource
S_source.cpp
S_source.hh
S_run_summary
common/stepahead/SaScalar.mk
.S_library_swig*
.icg_no_found
varserver_log
DP_Product

# Eclipse specific files
Debug
.cproject
.project
.pydevproject

# Ignore some unit test related files
unit-tests
unit-tests.log
unit-tests.info
unit-tests-valgrind.log
main.d
output/
test/int_test/*/TEST_*
test/int_test/*/RUN_LOG
test/int_test/*/uit_setup.d
test/int_test/*/uit_logdata.d
test/ci/verification/verification
make_all_ut.out
make_all_ut_roses.out

# Ignore trick-generated makefiles for unit tests
Makefile.trick

# * -------------------------------------------------------------------------------- * #
# * TEMPLATE-SPECIFIC
# *

# To avoid committing profiler results
*.prof
# To avoid committing rejected changes upon bumping template
*.rej
# Don't commit this duplicate of our answers. It's only used once on project creation.
.copier-answers-init.yml
# Don't commit code workspace files, which might be symlinked here
*.code-workspace

# * -------------------------------------------------------------------------------- * #
# * Partial Node.gitignore
# *
# * https://raw.githubusercontent.com/github/gitignore/master/Node.gitignore

# NPM/Node.JS because of Pyright CI/CD dependency
node_modules/

# * -------------------------------------------------------------------------------- * #
# * Modifications to the below Python.gitignore
# *
# * https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore


# IPython
.ipython/profile_default/*
!.ipython/profile_default/startup/
.ipython/profile_default/startup/README
ipython_config.py


# * -------------------------------------------------------------------------------- * #
# * Modified Python.gitignore
# *
# * https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
